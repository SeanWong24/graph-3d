/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Camera, Scene } from "three";
export namespace Components {
    interface ThreePerspectiveCamera {
        "aspect"?: number;
        "far"?: number;
        "fov"?: number;
        "near"?: number;
        "x"?: number;
        "y"?: number;
        "z"?: number;
    }
    interface ThreeRenderer {
        "height": number;
        /**
          * Update the camera object for the rederer.
          * @param camera the camera object
         */
        "updateCamera": (camera: Camera) => Promise<void>;
        /**
          * Update the scene object for the rederer.
          * @param scene the scene object
         */
        "updateScene": (scene: Scene) => Promise<void>;
        "updateStyle": boolean;
        "width": number;
    }
    interface ThreeScene {
    }
}
declare global {
    interface HTMLThreePerspectiveCameraElement extends Components.ThreePerspectiveCamera, HTMLStencilElement {
    }
    var HTMLThreePerspectiveCameraElement: {
        prototype: HTMLThreePerspectiveCameraElement;
        new (): HTMLThreePerspectiveCameraElement;
    };
    interface HTMLThreeRendererElement extends Components.ThreeRenderer, HTMLStencilElement {
    }
    var HTMLThreeRendererElement: {
        prototype: HTMLThreeRendererElement;
        new (): HTMLThreeRendererElement;
    };
    interface HTMLThreeSceneElement extends Components.ThreeScene, HTMLStencilElement {
    }
    var HTMLThreeSceneElement: {
        prototype: HTMLThreeSceneElement;
        new (): HTMLThreeSceneElement;
    };
    interface HTMLElementTagNameMap {
        "three-perspective-camera": HTMLThreePerspectiveCameraElement;
        "three-renderer": HTMLThreeRendererElement;
        "three-scene": HTMLThreeSceneElement;
    }
}
declare namespace LocalJSX {
    interface ThreePerspectiveCamera {
        "aspect"?: number;
        "far"?: number;
        "fov"?: number;
        "near"?: number;
        "x"?: number;
        "y"?: number;
        "z"?: number;
    }
    interface ThreeRenderer {
        "height"?: number;
        "updateStyle"?: boolean;
        "width"?: number;
    }
    interface ThreeScene {
    }
    interface IntrinsicElements {
        "three-perspective-camera": ThreePerspectiveCamera;
        "three-renderer": ThreeRenderer;
        "three-scene": ThreeScene;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "three-perspective-camera": LocalJSX.ThreePerspectiveCamera & JSXBase.HTMLAttributes<HTMLThreePerspectiveCameraElement>;
            "three-renderer": LocalJSX.ThreeRenderer & JSXBase.HTMLAttributes<HTMLThreeRendererElement>;
            "three-scene": LocalJSX.ThreeScene & JSXBase.HTMLAttributes<HTMLThreeSceneElement>;
        }
    }
}
